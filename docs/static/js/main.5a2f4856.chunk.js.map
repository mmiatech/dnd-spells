{"version":3,"sources":["Header.js","Form.js","Error.js","Loader.js","SpellInfo.js","hooks/useSpellName.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Form","submitSearch","useState","spellName","setSpellName","type","placeholder","required","value","onChange","e","target","onClick","preventDefault","Error","searchTerm","Loader","CircularProgress","SpellInfo","spellInfo","componentsList","data","components","reduce","list","c","classesList","classes","map","name","join","description","desc","x","casting_time","range","duration","useSpellName","isError","setError","isLoading","setLoading","setSpellInfo","submitRequest","a","replaceAll","axios","App","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a2f4856.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"app-header\">\r\n            <h1>D&D 5th Edition Spell Search</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Form = ({submitSearch}) => {\r\n    const [spellName, setSpellName] = useState('');\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        if (!spellName || spellName === '') return;\r\n        // console.log({spellName});\r\n        submitSearch(spellName);\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search for a spell!\"\r\n                required\r\n                value={spellName}\r\n                onChange={e => setSpellName(e.target.value)}\r\n            />\r\n\r\n            <button\r\n                type=\"submit\"\r\n                onClick={onSubmit}\r\n            >\r\n                Search\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nForm.propTypes = {\r\n    submitSearch: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst Error = ({searchTerm}) => {\r\n    return (\r\n        <div>\r\n            <h2>Spell Not Found</h2>\r\n            <p>We could not find the spell you searched for. Please check that it is spelled correctly.</p>\r\n            <p><strong>Your Search: </strong>{searchTerm}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import { CircularProgress } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <CircularProgress className=\"loader\"/>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SpellInfo = ({spellInfo}) => {\r\n    // console.log({spellInfo});\r\n    // console.log(spellInfo.data);\r\n    // console.log(spellInfo.data.name);\r\n    const componentsList = spellInfo.data.components.reduce((list, c) => {\r\n        return `${list}, ${c}`\r\n    });\r\n\r\n    const classesList = spellInfo.data.classes.map(c =>\r\n        c.name\r\n    ).join(\", \");\r\n\r\n    const description = spellInfo.data.desc.map(x =>\r\n        <p>{x}</p>\r\n    );\r\n\r\n    return (\r\n        <div className=\"info-display\">\r\n            <h2>{spellInfo.data.name}</h2>\r\n            <p><strong>Casting Time: </strong>{spellInfo.data.casting_time}</p>\r\n            <p><strong>Range: </strong>{spellInfo.data.range}</p>\r\n            <p><strong>Components: </strong>{componentsList}</p>\r\n            <p><strong>Duration: </strong>{spellInfo.data.duration}</p>\r\n            <p><strong>Classes: </strong>{classesList}</p>\r\n            <p>{description}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nSpellInfo.propTypes = {\r\n    spellInfo: PropTypes.object\r\n};\r\n\r\nexport default SpellInfo;","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst baseUrl = 'https://www.dnd5eapi.co';\r\n\r\nconst useSpellName = () => {\r\n    // console.log('use spell name hook');\r\n    const [isError, setError] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [spellInfo, setSpellInfo] = useState(null);\r\n\r\n    const submitRequest = async (spellName) => {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        spellName = spellName.replaceAll(' ', '-');\r\n        spellName = spellName.replaceAll(\"'\", '');\r\n        // console.log({ spellName });\r\n\r\n        try {\r\n            const { data } = await axios(`${baseUrl}/api/spells/${spellName}`);\r\n            //console.log(data);\r\n            setSpellInfo({ data });\r\n        } catch (err) {\r\n            setError(spellName);\r\n            setLoading(false);\r\n            return;\r\n        }\r\n    }\r\n\r\n    return {\r\n        isError\r\n        , isLoading\r\n        , spellInfo\r\n        , submitRequest\r\n    }\r\n  }\r\n\r\nexport default useSpellName;","import './App.css';\nimport Header from './Header';\nimport Form from './Form';\nimport Error from './Error';\nimport Loader from './Loader';\nimport SpellInfo from './SpellInfo';\nimport Container from '@mui/material/Container';\n\nimport useSpellName from './hooks/useSpellName';\n\nconst App = () => {\n    const { isError, isLoading, spellInfo, submitRequest } = useSpellName();\n\n    const onSubmit = (value) => {\n        submitRequest(value);\n    }\n\n    return (\n        <>\n            <Header />\n            <Container\n                maxWidth=\"md\"\n                className=\"container\"\n            >\n                <Container className=\"paper\">\n                    {!spellInfo && (\n                        <div>\n                            {isError && <Error searchTerm={isError}/>}\n                            {!isLoading && <Form submitSearch={onSubmit}/>}\n                            {isLoading && <Loader />}\n                        </div>\n                    )}\n                    {spellInfo && <SpellInfo spellInfo={spellInfo} />}\n                </Container>\n            </Container>\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}